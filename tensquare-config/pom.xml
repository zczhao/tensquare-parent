<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>zzc.springcloud</groupId>
		<artifactId>tensquare-parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>tensquare-config</artifactId>
	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-config-server</artifactId>
		</dependency>
		<!-- 消息总线组件：修改配置文件无需重启服务 -->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-bus</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-stream-binder-rabbit</artifactId>
		</dependency>
	</dependencies>

	<build>
		<finalName>app</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- docker的maven插件，官网：https://github.com/spotify/docker-maven-plugin -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					 <!-- 用于指定镜像名称 -->
					<imageName>192.168.156.61:5000/${project.artifactId}:${project.version}</imageName>
					<!--用于指定基础镜像，相当于Dockerfile中的FROM指令-->
					<baseImage>jdk1.8</baseImage>
					<!--相当于Dockerfile的ENTRYPOINT指令-->
					<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
					<resources>
						<!-- 这里是复制 jar 包到 docker 容器指定目录配置 -->
						<resource>
							<targetPath>/</targetPath>
							<!--用于指定需要复制的根目录，${project.build.directory}表示target目录-->
							<directory>${project.build.directory}</directory>
							<!--用于指定需要复制的文件。${project.build.finalName}.jar指的是打包后的jar包文件。-->
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
					<dockerHost>http://192.168.156.61:2375</dockerHost>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>